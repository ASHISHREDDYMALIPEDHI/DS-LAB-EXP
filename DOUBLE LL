class Node:
    def __init__(self,data=None):
        self.data=data
        self.next=None
        self.prev=None
class DLinkedList:
    def __init__(self):
        self.head=None
    def InsertBegin(self,newdata):
        newnode=Node(newdata)
        newnode.next=self.head
        if self.head!=None:
            self.head.prev=newnode
        self.head=newnode
    def InsertPosition(self,newdata,pos):
        newnode=Node(newdata)
        index=2
        temp=self.head
        temp1=temp.next
        while index!=pos:
            temp=temp.next
            temp1=temp1.next
            index+=1
        newnode.next=temp.next
        newnode.prev=temp1.prev
        temp.next=newnode
        temp1.prev=newnode
    def InsertEnd(self,newdata):
        newnode=Node(newdata)
        temp=self.head
        if self.head==None:
          self.head=newnode
        else:
          while temp.next!=None:
            temp=temp.next
          newnode.prev=temp
          temp.next=newnode
          self.head.prev=newnode
    def DeleteBegin(self):
        if self.head==None:
            print("No elements to delete")
        else:
            temp=self.head
            temp.prev=None
            self.head=temp.next
    def DeletePosition(self,pos):
        index=2
        temp=self.head
        temp1=temp.next
        if self.head==None:
            print("No elements to delete")
        else:
            while index!=pos:
                temp=temp.next
                temp1=temp1.next
                index+=1
            temp.next=temp1.next
            temp1.next.prev=temp1.prev
    def DeleteEnd(self):
        temp=self.head
        while temp.next!=None:
            temp=temp.next
        temp.prev.next=None
    def Search(self,pivot):
        temp=self.head
        index=1
        flag=0
        while temp!=None:
            if temp.data==pivot:
                print("Found",pivot,"at position:",index)
                flag=1
                break
            else:
                temp=temp.next
                index+=1
        if flag==0:
            print(pivot,"Not Found")
    def display(self):
        temp=self.head
        while temp!=None:
            print(temp.data,end="<=>")
            temp=temp.next
        print()
    def count(self):
      i=0
      temp=self.head
      while temp!=None:
          i+=1
          temp=temp.next
      print("No. of nodes is",i)
      print()
      
list1=DLinkedList()
print("""1.Insert at beginning
2.Insert in position
3.Insert at end
4.Delete at beginning
5.Delete at position
6.Delete at end
7.Display
8.Search
9.Count nodes
10.Exit""")
while True:
  ch=int(input("Enter choice:"))
  if ch==1:
    newdata=eval(input("Enter data:"))
    list1.InsertBegin(newdata)
    print()
  elif ch==2:
    newdata=eval(input("Enter data:"))
    pos=int(input("Enter psoition:"))
    list1.InsertPosition(newdata,pos)
    print()
  elif ch==3:
    newdata=eval(input("Enter data:"))
    list1.InsertEnd(newdata)
    print()
  elif ch==4:
    list1.DeleteBegin()
    print()
  elif ch==5:
    pos=int(input("Enter position:"))
    list1.DeletePosition(pos)
    print()
  elif ch==6:
    list1.DeleteEnd()
    print()
  elif ch==7:
    list1.display()
    print()
  elif ch==8:
    pivot=eval(input("Enter element to search:"))
    list1.Search(pivot)
    print()
  elif ch==9:
    list1.count()
    print()
  elif ch==10:
    break
  else:
    print("##Wrong input")
    print()
