class Node:
   def __init__(self, data):
      self.left = None
      self.right = None
      self.data = data
   def insert(self, data):
      if self.data:
         if data < self.data:
            if self.left is None:
               self.left = Node(data)
            else:
               self.left.insert(data)
         elif data > self.data:
               if self.right is None:
                  self.right = Node(data)
               else:
                  self.right.insert(data)
         else:
            self.data = data
   def findval(self, val):
      if val < self.data:
         if self.left is None:
            return str(val)+" Not Found"
         return self.left.findval(val)
      elif val > self.data:
          if self.right is None:
              return str(val)+" Not Found"
          return self.right.findval(val)
      else:
           return str(self.data) + ' is found'
   def PrintTree(self):
      if self.left:
         self.left.PrintTree()
      print( self.data),
      if self.right:
         self.right.PrintTree()

r=eval(input("Enter root node:"))
root = Node(r)
c='y'
while c=='y':
  r1=eval(input("Enter node:"))
  root.insert(r1)
  c=input("Do you wish to continue entering?(y/n)")
ch='y'
print()
while ch=="y":
  s=eval(input("Enter element to search:"))
  print(root.findval(s))
  ch=input("Do you wish to continue searching?(y/n)")
